/*
 * Copyright (c) 2015, Andrey Lavrov <lavroff@gmail.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
package cy.alavrov.jminerguide.forms;

import cy.alavrov.jminerguide.monitor.AsteroidMonitorSettings;
import cy.alavrov.jminerguide.util.IntegerDocumentFilter;
import javax.swing.text.AbstractDocument;

/**
 * Asteroid monitor settings dialog.
 * @author Andrey Lavrov <lavroff@gmail.com>
 */
public class JAsteroidMonitorSettingsDialog extends javax.swing.JDialog {

    private final AsteroidMonitorSettings settings;
    
    /**
     * Creates new form JAsteroidMonitorSettingsForm
     */
    public JAsteroidMonitorSettingsDialog(java.awt.Frame parent, AsteroidMonitorSettings settings) {
        super(parent, true);
        initComponents();
        
        this.settings = settings;
        jCheckBoxPopupAlert.setSelected(settings.isPopupOnAlert());
        jCheckBoxSoundAlert.setSelected(settings.isSoundOnAlert());
        jTextFieldTimerRemove.setText(String.valueOf(settings.getTimerAlertRemoveTimeout()));
        jCheckBoxRoidsCleanup.setSelected(settings.isAsteroidAutoCleanup());
        
        AbstractDocument idDoc = ((AbstractDocument)jTextFieldTimerRemove.getDocument());
        idDoc.setDocumentFilter(new IntegerDocumentFilter());
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jCheckBoxPopupAlert = new javax.swing.JCheckBox();
        jCheckBoxSoundAlert = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldTimerRemove = new javax.swing.JTextField();
        jButtonSave = new javax.swing.JButton();
        jButtonClose = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jCheckBoxRoidsCleanup = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Asteroid Monitor Settings");
        setModal(true);
        setResizable(false);

        jLabel1.setText("Alerts");

        jCheckBoxPopupAlert.setText("Pop Up on Alert");

        jCheckBoxSoundAlert.setText("Play Sound on Alert");

        jLabel2.setText("Seconds to Remove Exprired Timer");

        jTextFieldTimerRemove.setText("5");

        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonClose.setText("Close");
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });

        jLabel3.setText("Mining");

        jCheckBoxRoidsCleanup.setText("Auto-cleanup Asteroids");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jCheckBoxSoundAlert)
                        .addComponent(jLabel1)
                        .addComponent(jCheckBoxPopupAlert)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldTimerRemove))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonClose))
                    .addComponent(jLabel3)
                    .addComponent(jCheckBoxRoidsCleanup))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxPopupAlert)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxSoundAlert)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxRoidsCleanup)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextFieldTimerRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSave)
                    .addComponent(jButtonClose))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonCloseActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        settings.setPopupOnAlert(jCheckBoxPopupAlert.isSelected());
        settings.setSoundOnAlert(jCheckBoxSoundAlert.isSelected());
        settings.setAsteroidAutoCleanup(jCheckBoxRoidsCleanup.isSelected());
        
        String timeoutStr = jTextFieldTimerRemove.getText();
        int timeout;
        try {
            timeout = Integer.parseInt(timeoutStr, 10);
        } catch (NumberFormatException e) {
            timeout = 5;
        }

        if (timeout < 0) timeout = 0;            
        settings.setTimerAlertRemoveTimeout(timeout);
        settings.save();
        
        this.dispose();
    }//GEN-LAST:event_jButtonSaveActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JCheckBox jCheckBoxPopupAlert;
    private javax.swing.JCheckBox jCheckBoxRoidsCleanup;
    private javax.swing.JCheckBox jCheckBoxSoundAlert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextFieldTimerRemove;
    // End of variables declaration//GEN-END:variables
}
