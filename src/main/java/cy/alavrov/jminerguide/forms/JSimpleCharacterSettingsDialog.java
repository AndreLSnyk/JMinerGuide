/*
 * Copyright (c) 2015, Andrey Lavrov <lavroff@gmail.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
package cy.alavrov.jminerguide.forms;

import cy.alavrov.jminerguide.data.character.SimpleCharacter;
import cy.alavrov.jminerguide.log.JMGLogger;
import cy.alavrov.jminerguide.monitor.MiningSession;
import cy.alavrov.jminerguide.monitor.SimpleSessionCharacter;
import cy.alavrov.jminerguide.util.FloatDocumentFilter;
import cy.alavrov.jminerguide.util.IntegerDocumentFilter;
import javax.swing.text.AbstractDocument;

/**
 * Setting mining parameters for a simple session character.
 * @author Andrey Lavrov <lavroff@gmail.com>
 */
public class JSimpleCharacterSettingsDialog extends javax.swing.JDialog {
    private final MiningSession session;
    private final JAsteroidMonitorForm parent;

    /**
     * Creates new form JSimpleCharacterSettingsDialog
     */
    public JSimpleCharacterSettingsDialog(JAsteroidMonitorForm parent, MiningSession session) {
        super(parent, true);
        initComponents();
                
        this.session = session;
        this.parent = parent;
        
        AbstractDocument idDoc = ((AbstractDocument)jTextFieldTurretYield.getDocument());
        idDoc.setDocumentFilter(new IntegerDocumentFilter());
        
        idDoc = ((AbstractDocument)jTextFieldOreHold.getDocument());
        idDoc.setDocumentFilter(new IntegerDocumentFilter());
        
        idDoc = ((AbstractDocument)jTextFieldTurretYield.getDocument());
        idDoc.setDocumentFilter(new FloatDocumentFilter());
        
        jComboBoxTurrets.setModel(MainFrame.getIntegerModel(3));
        
        synchronized(session) {
            SimpleSessionCharacter character = (SimpleSessionCharacter) session.getSessionCharacter();
            
            jTextFieldTurretCycle.setText(String.valueOf(
                    ((SimpleCharacter)character.getCoreCharacter()).getTurretCycle()
            ));
            
            jTextFieldTurretYield.setText(String.valueOf(
                    ((SimpleCharacter)character.getCoreCharacter()).getTurretYield()
            ));
            
            jTextFieldOreHold.setText(String.valueOf(
                    ((SimpleCharacter)character.getCoreCharacter()).getOreHold()
            ));
            
            jComboBoxTurrets.setSelectedItem(
                    ((SimpleCharacter)character.getCoreCharacter()).getTurrets()
            );
            
            jLabelName.setText(character.getCoreCharacter().getName());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelName = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldTurretYield = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldTurretCycle = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxTurrets = new javax.swing.JComboBox<Integer>();
        jButtonSave = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldOreHold = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Configure Ship");
        setModal(true);
        setResizable(false);

        jLabelName.setText("name");

        jLabel1.setText("Turret Yield, m3");

        jLabel2.setText("Turret Cycle, sec");

        jLabel3.setText("Turrets");

        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jLabel4.setText("Ore Hold");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelName)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCancel))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldTurretCycle)
                            .addComponent(jTextFieldTurretYield)
                            .addComponent(jComboBoxTurrets, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldOreHold, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelName)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldTurretYield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldTurretCycle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxTurrets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldOreHold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSave)
                    .addComponent(jButtonCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        synchronized(session) {
            SimpleSessionCharacter character = (SimpleSessionCharacter) session.getSessionCharacter();

            SimpleCharacter sChar = (SimpleCharacter) character.getCoreCharacter();

            try {
                sChar.setTurretYield(Integer.parseInt(jTextFieldTurretYield.getText(), 10));                
            } catch (Exception e) {
                sChar.setTurretYield(0);
            }
            
            try {
                sChar.setTurretCycle(Float.parseFloat(jTextFieldTurretCycle.getText()));
            } catch (Exception e) {
                sChar.setTurretCycle(0);
            }
                
            try {
                sChar.setOreHold(Integer.parseInt(jTextFieldOreHold.getText(), 10));
            } catch (Exception e) {
                sChar.setOreHold(0);
            }
            
            sChar.setTurrets((int) jComboBoxTurrets.getSelectedItem());
            
            character.recalculateStats();
            session.unbindAllTurrets();
        }

        parent.updateCharacterStatsIfCurrent(session);

        parent.deleteSessionCharacterSettingsDialog();
        this.dispose();
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        parent.deleteSessionCharacterSettingsDialog();
        this.dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JComboBox<Integer> jComboBoxTurrets;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JTextField jTextFieldOreHold;
    private javax.swing.JTextField jTextFieldTurretCycle;
    private javax.swing.JTextField jTextFieldTurretYield;
    // End of variables declaration//GEN-END:variables
}
