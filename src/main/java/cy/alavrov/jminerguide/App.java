/*
 * Copyright (c) 2014, alavrov
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

package cy.alavrov.jminerguide;

import cy.alavrov.jminerguide.data.DataContainer;
import cy.alavrov.jminerguide.forms.MainFrame;
import cy.alavrov.jminerguide.log.JMGLogger;
import cy.alavrov.jminerguide.util.DirUtils;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

/**
 *
 * @author alavrov
 */
public final class App {
    
    private static String version;
    
    public static final String getVersion() {
        return version;
    }
    
    private App() {
        
    }
    
    public static void main(String[] args) {
        // logs and local data will be stored there.
        String s = File.separator;
        String userDataDir = DirUtils.getDocumentsDir()+"JMinerGuide"+s;
        File f = new File(userDataDir);
        if (!f.exists()) f.mkdirs();
        
        JMGLogger.init(userDataDir);
        JMGLogger.logWarning("Starting up the engine...");
        
        final DataContainer dContainer = new DataContainer(userDataDir);
        dContainer.load();
        
        try {
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
        } catch (Exception ex) {
            JMGLogger.logSevere("Unable to set look and feel", ex);
        } 
        
        // let's get app version from autogenerated property file.
        ClassLoader loader = Thread.currentThread().getContextClassLoader();
        Properties props = new Properties();
        try (InputStream resourceStream = loader.getResourceAsStream("app.properties")) {
            props.load(resourceStream);
            version = props.getProperty("application.version", "0.0.0");
        } catch (IOException ex) {
            version = "UNKNOWN";
            JMGLogger.logSevere("Unable to get application version", ex);
        }
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame(dContainer).setVisible(true);
            }
        });
    }
}
